datasource db {
	provider = "mongodb"
	url = env("DATABASE_URL")
}

generator client {
	provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  lastname      String
  email         String?   @unique
  hashedPassword String?
  verified       Boolean @default(false)
  isAdmin        Boolean  @default(false)
  
  sessions Session[]
  accounts Account[]
  category Category[]
}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  category String
  userId String @db.ObjectId 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  item Item[]
}

model Item {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  photo String?
  subcategory String?
  itemName String
  description String?
  brand String?
  supplier String?
  stock Float?
  unit String?
  salePrice Float
  netPrice Float
  vat Float?
  categoryId String @db.ObjectId
  category Category @relation(fields: [categoryId],references: [id], onDelete: Cascade)
}

model VerificationToken {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  email String
  token String @unique
  reset Boolean @default(false)
  expires DateTime

  @@unique([email,token])
}